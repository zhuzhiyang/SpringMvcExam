<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.dao.PaymentMapper" >
  <resultMap id="BaseResultMap" type="com.hand.Model.Payment" >
    <id column="payment_id" property="paymentId" jdbcType="SMALLINT" />
    <result column="customer_id" property="customerId" jdbcType="SMALLINT" />
    <result column="staff_id" property="staffId" jdbcType="TINYINT" />
    <result column="rental_id" property="rentalId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="payment_date" property="paymentDate" jdbcType="TIMESTAMP" />
    <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </delete>
   <delete id="deletePayment" parameterType="int">	
        delete from payment where customer_id=#{id}
    </delete>
  <insert id="insert" parameterType="com.hand.Model.Payment" >
    insert into payment (payment_id, customer_id, staff_id, 
      rental_id, amount, payment_date, 
      last_update)
    values (#{paymentId,jdbcType=SMALLINT}, #{customerId,jdbcType=SMALLINT}, #{staffId,jdbcType=TINYINT}, 
      #{rentalId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{paymentDate,jdbcType=TIMESTAMP}, 
      #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hand.Model.Payment" >
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="rentalId != null" >
        rental_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="paymentDate != null" >
        payment_date,
      </if>
      <if test="lastUpdate != null" >
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paymentId != null" >
        #{paymentId,jdbcType=SMALLINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null" >
        #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null" >
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null" >
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hand.Model.Payment" >
    update payment
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null" >
        rental_id = #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null" >
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null" >
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hand.Model.Payment" >
    update payment
    set customer_id = #{customerId,jdbcType=SMALLINT},
      staff_id = #{staffId,jdbcType=TINYINT},
      rental_id = #{rentalId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
</mapper>